<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.miniproj.mappers.hboardmapper">


	<!-- 게시판의 모든 게시글을 번호 내림차순 정렬하여 가져오는 쿼리문 -->
	<select id="getAllHBoard"
		resultType="com.miniproj.model.HBoardVO">
		select * from hboard order by boardNo desc
	</select>

	<!-- 새로운 게시글을 저장하는 쿼리문 -->
	<insert id="saveNewBoard">
		insert into hboard(title, content, writer)
		values(#{title}, #{content}, #{writer})
	</insert>

	<!-- 저장된 글번호를 가져오는 쿼리문 -->
	<select id="getMaxNo" resultType="int">
		select max(boardNo) from hboard
	</select>

	<!-- 업로드된 첨부파일을 저장하는 쿼리문 -->
	<insert id="saveUpFile">
		insert into boardupfiles(newFileName,
		originalFileName,
		thumbFileName, ext, size, boardNo, base64Img)
		values
		(#{newFileName}, #{originalFileName}, #{thumbFileName}, #{ext},
		#{size}, #{boardNo}, #{base64Img});
	</insert>

	<!-- 게시글의 상세정보를 담기 위한 resultmap설정 -->
	<resultMap type="com.miniproj.model.BoardDetailInfo" id="boardDetailInfoMap">
		<result column="boardNo"  property="boardNo" javaType="int" />
		<result column="title"  property="title" javaType="String" />
		<result column="content"  property="content" javaType="String" />
		<result column="writer"  property="writer" javaType="String" />
		<result column="postDate"  property="postDate" javaType="java.sql.Timestamp" /> <!-- Timestamp는 기본 클래스가 아니므로 타입에 클래스까지 적어줘야함 -->
		<result column="readCount"  property="readCount" javaType="int" />

		<result column="userName"  property="userName" javaType="String" />
		<result column="email"  property="email" javaType="String" />
		
		<!-- 리스트타입은 collection 태그로 묶어서 사용-->
		<collection property="fileList" ofType="com.miniproj.model.BoardUpFilesVODTO" javaType="java.util.ArrayList">
			<result column="boardUpFileNo"  property="boardUpFileNo" javaType="int" />
			<result column="newFileName"  property="newFileName" javaType="String" />
			<result column="originalFileName"  property="originalFileName" javaType="String" />
			<result column="thumbFileName"  property="thumbFileName" javaType="String" />
			<result column="ext"  property="ext" javaType="String" />
			<result column="size"  property="size" javaType="long" />
			<result column="boardNo"  property="boardNo" javaType="int" />
			<result column="base64Img"  property="base64Img" javaType="String" />
		</collection>

	</resultMap>
	<!-- 게시글의 상세정보를 담는 조인문 -->
	<select id="selectBoardDetailInfoByBoardNo" resultMap="boardDetailInfoMap" >
		select h.boardNo, h.title, h.content, h.writer,
		h.postDate, h.readCount,
		f.*, m.username, m.email
		from hboard as h left outer join boardupfiles f
		on h.boardNo = f.boardNo
		inner join member m
		on h.writer = m.userId
		where h.boardNo=#{boardNo}
	</select>

	<!-- 게시글의 조회수를 증가하는 쿼리문 -->
	<update id="updateReadCount">
		update hboard set readCount = readCount+1 where boardNo=#{boardNo}
	</update>
	
	<!-- ipAddr의 유저가 boardNo글을 조회한 시간차를 얻는 메서드 ( 조회한 적이 없으면 -1반환) -->
	<select id="selectBoardDateDiff" resultType="int">
	select ifnull( 
	DATEDIFF(now(),
		(select readWhen from boardreadlog where readWho=#{readWho} and boardNo=#{boardNo})
		), -1) as datediff;
	</select>
	
	<!-- ipAddr의 유저가 boardNo글을 현재 시간에 조회한다고 기록 -->
	<insert id="saveBoardReadLog">
		insert into boardreadlog(readWho, boardNo) values(#{readWho}, #{boardNo})
	</insert>
	
	<!-- 조회수 증가한 날짜로 업데이트 -->
	<update id="updateBoardReadLog">
		update boardreadlog set readWhen = now() where readWho=#{readWho} and boardNo=#{boardNo}
	</update>
</mapper>